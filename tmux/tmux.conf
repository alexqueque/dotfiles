# vim:fileencoding=utf-8:foldmethod=marker

#: Reset {{{

unbind C-b
unbind C-f
unbind %
unbind "'"
unbind -T copy-mode-vi i
unbind -T copy-mode-vi k
unbind -T copy-mode-vi j
unbind -T copy-mode-vi l

#: }}}



#: Global configs {{{

# Change the default $TERM to screen-256color
set -g default-terminal "screen-256color"
# Enable RGB colour if running in xterm(1)
set -sa terminal-overrides ",xterm*:Tc"

# Turn the mouse on, but without copy mode dragging
set -g mouse on
unbind -n MouseDrag1Pane
unbind -Tcopy-mode MouseDrag1Pane

# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -sg escape-time 0

# Enable the new keyboard protocol for Tmux, and applying to the applications inside it on demand
set -s extended-keys on

# Increase scrollback buffer size from 2000 to 50000 lines
set -g history-limit 50000

# No bells at all
set -g bell-action none

# Focus events enabled for terminals that support them
set -g focus-events on

#: }}}



#: Global key bindings {{{

# Change the prefix key to C-Space
set -g prefix C-Space
bind C-Space send-prefix

# Remap ; to : for convenience
bind-key \; command-prompt

# Use neovim key bindings
set -g mode-keys vi
set -g status-keys vi

# Increase repeat time for repeatable commands
set -g repeat-time 1000

# TODO: find a way to differentiate C-I and Tab with CSI u
#bind -n C-i if "[ $(tmux display -p '#{pane_current_command}') == 'fish' ]" "copy-mode; send -N 5 -X cursor-up" "send C-I"
#bind -n C-k if "[ $(tmux display -p '#{pane_current_command}') == 'fish' ]" "copy-mode; send -N 5 -X cursor-down" "send C-K"
bind -n C-j if "[ $(tmux display -p '#{pane_current_command}') == 'fish' ]" "send -H 0x01" "send C-J"
bind -n C-l if "[ $(tmux display -p '#{pane_current_command}') == 'fish' ]" "send -H 0x05" "send C-L"
bind -n C-H if "[ $(tmux display -p '#{pane_current_command}') == 'fish' ]" "send -H 0x15" "send C-H"

bind p paste-buffer       # Paste
bind C-p choose-buffer    # Tmux clipboard history
#bind "'" delete-buffer\; display "Clipboard history deleted"

#: }}}



#: Pane {{{

bind -r i select-pane -U
bind -r k select-pane -D
bind -r j select-pane -L
bind -r l select-pane -R

bind -r C-i resize-pane -U 5
bind -r C-k resize-pane -D 5
bind -r C-j resize-pane -L 5
bind -r C-l resize-pane -R 5

bind -r J swap-pane -d -t -1
bind -r L swap-pane -d -t +1

bind -r x kill-pane

#: }}}



#: Window {{{

# Highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

# Start window/pane index at 1
set -g base-index 1
set -g pane-base-index 1
# Re-number windows when one is closed
set -g renumber-windows on

bind n new-window -c "#{pane_current_path}"
bind r command-prompt "rename-window %%"
bind C-x kill-window

bind -r [ previous-window
bind -r ] next-window
bind -r C-[ swap-window -d -t -1
bind -r C-] swap-window -d -t +1

bind -r - split-window -h -c "#{pane_current_path}"
bind -r = split-window -v -c "#{pane_current_path}"

#: }}}



#: Session {{{

bind R command-prompt "rename-session %%"
bind q confirm-before -p "kill-session #S? (y/n)" kill-session

#: }}}



# : Vim mode {{{

bind Escape copy-mode

bind -T copy-mode-vi i send -X cursor-up
bind -T copy-mode-vi I send -N 5 -X cursor-up
bind -T copy-mode-vi k send -X cursor-down
bind -T copy-mode-vi K send -N 5 -X cursor-down
bind -T copy-mode-vi j send -X cursor-left
bind -T copy-mode-vi J send -X start-of-line
bind -T copy-mode-vi l send -X cursor-right
bind -T copy-mode-vi L send -X end-of-line

bind -T copy-mode-vi v send -X begin-selection
#bind -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

#: }}}



#: Status {{{

# If running inside tmux ($TMUX is set), then change the status line to red
%if #{TMUX}
set status-bg red
%endif

# Refresh `status-left` and `status-right` more often, from every 15s to 5s
set -g status-interval 5

#: }}}



#: Plugins {{{

set -g @plugin "tmux-plugins/tpm"
set -g @plugin "dracula/tmux"
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'

TMUX_FZF_LAUNCH_KEY="f"
set -g @plugin 'sainnhe/tmux-fzf'

set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run "~/.config/tmux/plugins/tpm/tpm"

#: }}}


