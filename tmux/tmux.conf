# vim:fileencoding=utf-8:foldmethod=marker

#: Reset {{{

unbind C-b
unbind %
unbind "'"
unbind -T copy-mode-vi i
unbind -T copy-mode-vi k
unbind -T copy-mode-vi j
unbind -T copy-mode-vi l

unbind BSpace
unbind -T copy-mode-vi BSpace
unbind -T copy-mode BSpace
unbind C-BSpace
unbind -T copy-mode-vi C-BSpace
unbind -T copy-mode C-BSpace

#: }}}



#: Global {{{

# Change the default $TERM to screen-256color
set -g default-terminal "screen-256color"
# Enable RGB colour if running in xterm(1)
set -sa terminal-overrides ",xterm*:Tc"

# Turn the mouse on, but without copy mode dragging
set -g mouse on
unbind -n MouseDrag1Pane
unbind -Tcopy-mode MouseDrag1Pane

# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# Increase scrollback buffer size from 2000 to 50000 lines
set -g history-limit 50000

# Refresh 'status-left' and 'status-right' more often, from every 15s to 5s
set -g status-interval 5

# Start window/pane index at 1
set -g base-index 1
set -g pane-base-index 1
# Re-number windows when one is closed
set -g renumber-windows on

# No bells at all
set -g bell-action none

# Focus events enabled for terminals that support them
set -g focus-events on

#: }}}



#: Key bindings {{{

# Change the prefix key to C-Space
set -g prefix C-Space
bind C-Space send-prefix

# Use neovim key bindings
set -g mode-keys vi
set -g status-keys vi

# Increase repeat time for repeatable commands
set -g repeat-time 1500




#: }}}



#: Pane {{{

bind -r i resize-pane -U 5
bind -r k resize-pane -D 5
bind -r j resize-pane -L 5
bind -r l resize-pane -R 5

bind -r [ select-pane -t :.-
bind -r ] select-pane -t :.+
bind -r "'" last-pane

bind -r , swap-pane -d -t -1
bind -r . swap-pane -d -t +1

bind -r x kill-pane

#: }}}



#: Window {{{

bind -r n new-window -c "#{pane_current_path}"
bind -r C-x kill-window

bind -r C-[ previous-window
bind -r C-] next-window
bind -r '"' last-window

bind -r - split-window -h -c "#{pane_current_path}"
bind -r = split-window -v -c "#{pane_current_path}"

bind -r < swap-window -d -t -1
bind -r > swap-window -d -t +1

#: }}}



#: Session {{{

bind q confirm-before -p "kill-session #S? (y/n)" kill-session

#: }}}



# : Vim mode {{{

bind "'" copy-mode

bind -T copy-mode-vi i send -X cursor-up
bind -T copy-mode-vi I send -N 5 -X cursor-up
bind -T copy-mode-vi k send -X cursor-down
bind -T copy-mode-vi K send -N 5 -X cursor-down
bind -T copy-mode-vi j send -X cursor-left
bind -T copy-mode-vi J send -X start-of-line
bind -T copy-mode-vi l send -X cursor-right
bind -T copy-mode-vi L send -X end-of-line

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

#: }}}



#: Status {{{

# If running inside tmux ($TMUX is set), then change the status line to red
%if #{TMUX}
set status-bg red
%endif

#: }}}



#: Plugins {{{

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'dracula/tmux'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'

#: }}}


bind -n C-I if "[ $(tmux display-message -p '#{pane_current_command}') == 'fish' ]" "copy-mode; send -N 5 -X cursor-up" "send C-I"
bind -n C-K if "[ $(tmux display-message -p '#{pane_current_command}') == 'fish' ]" "copy-mode; send -N 5 -X cursor-down" "send C-K"
bind -n C-J if "[ $(tmux display-message -p '#{pane_current_command}') == 'fish' ]" "send -H 0x01" "send C-J"
bind -n C-L if "[ $(tmux display-message -p '#{pane_current_command}') == 'fish' ]" "send -H 0x05" "send C-L"
bind -n C-BSpace if "[ $(tmux display-message -p '#{pane_current_command}') == 'fish' ]" "display 'hell'" "display 'fuck'"
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"

